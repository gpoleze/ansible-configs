# https://dev.to/musabhusaini/remote-development-with-multi-node-microk8s-cluster-and-scaffold-4o1d

- name: install MicroK8s
  snap:
    name: microk8s
    state: present
    classic: true
  become: true

- name: wait for MicroK8s to be ready
  command: microk8s status --wait-ready
  register: wait_result
  failed_when: "'microk8s is running' not in wait_result.stdout"
  become: true

- name: add kubectl alias
  command: snap alias microk8s.kubectl kubectl
  become: true

- name: enabling microk8s modules
  command: "microk8s enable {{ item }}"
  with_items:
  - dns
  - ingress 
  - storage

# Configuring Storage
- name: get local hostpath-provisioner deploy in kube-system
  command: microk8s kubectl get -o yaml -n kube-system deploy hostpath-provisioner
  register: hostpath_provisioner

- name: write hostpath_provisioner new deploy file
  copy:
    content: "{{ new_deploy }} "
    dest: /tmp/hostpath_provisioner_new_deploy.yml
  vars:
    old_path: /var/snap/microk8s/common/default-storage
    new_path: /data/snap/microk8s/common/default-storage
    new_deploy: "{{ hostpath_provisioner.stdout | replace(old_path, new_path) }}"
  become: true

- name: apply hostpath_provisioner
  command: 
    cmd: kubectl apply -f hostpath_provisioner_new_deploy.yml
    chdir: /tmp

- name: stopping microk8s
  command: microk8s stop
  register: cmd_res
  retries: 5
  until: "'Stopped.' in cmd_res.stdout"

- name: restart microk8s
  command: microk8s start
  register: cmd_res
  retries: 5
  until: "'Started.' in cmd_res.stdout"

- name: create .kube folder
  file:
    path: ~/.kube
    state: directory

- name: generate kubeconfig
  shell: >-
    microk8s kubectl config view --raw > $HOME/.kube/config

- name: Cleanup
  file: 
    name: /tmp/hostpath_provisioner_new_deploy.yml
    state: absent
